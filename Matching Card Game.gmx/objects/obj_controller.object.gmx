<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
Memory Match Card Game
As seen on SlasherXGAMES
https://www.youtube.com/user/SlasherXGAMES
*/

global.selectionNumber = 0;//initialize the selection number

//initialize the comparison array
global.match[0, 0] = "null";
global.match[0, 1] = 999;
global.match[1, 0] = "null";
global.match[1, 1] = 999;

global.can_select = true;//we can start flipping a card
global.flipAttempts = 0;//initialize attempts

//the width and height of the grid of cards
width = 8;
height = 3;

//initialize card counts
fixerCount = 0;
rushinCount = 0;
sprayerCount = 0;
mobsCount = 0;
wizardCount = 0;
doubleCount = 0;

//x and y of first card
xx = 80;
yy = 160;

//card type has not yet been determined
found = false;

//generage a random number between 0 and 5 (inclusive)
randomize();
r = irandom(5);

//for the specified width (8 cards right)
for (var i = 0; i &lt; width; i++)
{
    //for the specified height (3 cards down)
    for (var j = 0; j &lt; height; j++)
    {
        //create a blank card and store its id in temporary variable called card
        var card = instance_create(xx, yy, obj_card);
        
        //while card type has not yet been determined
        while (found == false)
        {
            switch(r)//switch on the random variable
            {
                case 0://if r == 0
                    if (fixerCount &lt; 4)//if we need more fixers
                    {
                        card.type = "fixer";//set the above card instance's type to fixer
                        found = true;//type has been found
                        fixerCount++;//therefore, one more fixer has been set
                    }
                    else
                    {
                        //generage another random number between 0 and 5 (inclusive)
                        randomize();
                        r = irandom(5);
                        found = false;//type has not been determined
                    }
                break;
                
                case 1://if r == 1
                    if (rushinCount &lt; 4)//if we need more rushins
                    {
                        card.type = "rushin";//set the above card instance's type to rushin
                        found = true;//type has been found
                        rushinCount++;//therefore, one more rushin has been set
                    }
                    else
                    {
                        //generage another random number between 0 and 5 (inclusive)
                        randomize();
                        r = irandom(5);
                        found = false;//type has not been determined
                    }
                break;
                
                case 2://if r == 2
                    if (sprayerCount &lt; 4)//if we need more sprayers
                    {
                        card.type = "sprayer";//set the above card instance's type to sprayer
                        found = true;//type has been found
                        sprayerCount++;//therefore, one more sprayer has been set
                    }
                    else
                    {
                        //generage another random number between 0 and 5 (inclusive)
                        randomize();
                        r = irandom(5);
                        found = false;//type has not been determined
                    }
                break;
                
                case 3://if r == 3
                    if (mobsCount &lt; 4)//if we need more mobs
                    {
                        card.type = "mobs";//set the above card instance's type to mobs
                        found = true;//type has been found
                        mobsCount++;//therefore, one more mobs has been set
                    }
                    else
                    {
                        //generage another random number between 0 and 5 (inclusive)
                        randomize();
                        r = irandom(5);
                        found = false;//type has not been determined
                    }
                break;
                
                case 4://if r == 4
                    if (wizardCount &lt; 4)//if we need more wizards
                    {
                        card.type = "wizard";//set the above card instance's type to wizard
                        found = true;//type has been found
                        wizardCount++;//therefore, one more wizard has been set
                    }
                    else
                    {
                        //generage another random number between 0 and 5 (inclusive)
                        randomize();
                        r = irandom(5);
                        found = false;//type has not been determined
                    }
                break;
                
                case 5://if r == 5
                    if (doubleCount &lt; 4)//if we need more doubles
                    {
                        card.type = "double";//set the above card instance's type to double
                        found = true;//type has been found
                        doubleCount++;//therefore, one more double has been set
                    }
                    else
                    {
                        //generage another random number between 0 and 5 (inclusive)
                        randomize();
                        r = irandom(5);
                        found = false;//type has not been determined
                    }
                break;
            }
        }
        
        //generage another random number between 0 and 5 (inclusive)
        randomize();
        r = irandom(5);
        found = false;//type has not been determined
        yy += 224;//increase y value for next vertical card placement
    }
    
    xx += 160;//increase x value for next horizontal card placement
    yy = 160;//reset y
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw the comparison array for testing
draw_set_color(c_red);
draw_text(50, 10, "Card 1 Type: " + string(global.match[0, 0]));
draw_text(50, 25, "Card 1 id: " + string(global.match[0, 1]));
draw_text(240, 10, "Card 2 Type: " + string(global.match[1, 0]));
draw_text(240, 25, "Card 2 id: " + string(global.match[1, 1]));

//draw our flip attempts
draw_text(640, 10, "Flip Attempts: " + string(global.flipAttempts));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
